name: Build Images

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate Matrix
        id: matrix
        uses: actions/github-script@v8
        with:
          script: |
            const script = require('./bin/prepare-matrix.js')
            const matrix = script.main()

            console.log('Generated matrix:')
            console.log(JSON.stringify({ include: matrix }, null, 2))

            core.setOutput('matrix', JSON.stringify({ include: matrix }))

            return { include: matrix }

  build-publish-image:
    needs: generate-matrix
    runs-on: ubuntu-latest
    name: 'Build Images (${{ matrix.context}})'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: kula
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v5
        if: always()
        with:
          cache-from: type=registry,ref=ghcr.io/kula-app/containers/${{ matrix.image }}:buildcache
          cache-to: type=registry,ref=ghcr.io/kula-app/containers/${{ matrix.image }}:buildcache,mode=max
          context: images/${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ matrix.tags }}
